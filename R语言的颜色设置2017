关于颜色，如果你不想自己创建新的调色板，你只需要记住的函数colors、palette、rainbow和RColorBrewer包就可以了。
```r
# 查看所有用英文定义的颜色
colors()
# 查看当前调色板
palette()
# 重新设定当前调色板为彩虹调色板的10种颜色
palette(rainbow(10))
# 将palette恢复默认调色板。
palette("default")
```

## 1 、R的5个预设调色板
不要小看了这5个预设的调色板。它们有两大厉害的功能：1）可以设定不透明度alpha；2）可以轻松生成任意数量n的不同颜色。这5个预设调色板为：

-  rainbow
-  heat.colors
-  terrain.colors
- topo.colors
-  cm.colors

在R环境里面输入:**?rainbow**或其它4个函数名之一就可以获得这5个函数的用法说明。这些函数最少需要一个参数，n，表示要得到颜色的数量。n在系统允许范围内没有限制。下面用彩虹色调色板函数rainbow产生的颜色绘一个色盘：
```r
n <- 12
pie(rep(1,times=n),col=rainbow(n, alpha = 1), main = "rainbow")
```

R语言中除了自带rainbow()调色板还有以下4种:
```r
par(mfrow = c(2, 2))
n=12
pie(rep(1, n), col = heat.colors(n), main = "heat")
pie(rep(1, n), col = terrain.colors(n), main = "terrain")
pie(rep(1, n), col = topo.colors(n), main = "topo")
pie(rep(1, n), col = cm.colors(n), main = "cm")
```

R预设调色板可以通过`alpha=`参数设置（不）透明度
对于数据量大的散点图，设置颜色透明度是非常必要
```r
mycolor <- rainbow(3, alpha = 0.1)  #alpha设置（不）透明度
x <- rnorm(5000); y<- rnorm(5000)
par(mfcol=c(1,1)); par(mar=c(1,3,1,1));#par(xaxs="i", yaxs="i")
plot(x, y, pch=20, cex=2, col=mycolor[1], xlab="", ylab='', axes=F);box()
```

## 2、RColorBrewer包
主要用brewer.pal()函数，包的两个优点使得其非常实用。
 一是，包中颜色板被划分为序列型(sequential)、离散型(diverging)、分类型（qualitative)这三种基本能满足统计作图需要的类型；
 二是，颜色都比较协调。更多指引见其官网ColorBrewer。
```r
require("RColorBrewer")
```
 - 序列型颜色板，数字小浅大深，适用于从低到高排序明显的数据
```r
 display.brewer.all(type = "seq")
```
- 离散型颜色板，两头深中间浅，适合带正、负的，对极值和中间值比较注重的数据
```r
display.brewer.all(type = "div")
```
- 分类型颜色板，适合类别分组的数据，如散点图中区分。
```r
display.brewer.all(type = "qual")
```

brewer.pal(n, name)函数,n调色板中的颜色数，最小为3，name调色板名称
pie(rep(1, n), col = brewer.pal(n, "BuGn"), main = "cm")

 colorRampPalette()返回的对象像rainbow()一样，输入参数为希望返回颜色板色彩的数量。
例如， 根据"BuGn"调色板生成12种系列颜色（原来只有9种）。
```r
pie(rep(1, n), col = colorRampPalette(brewer.pal(9, "BuGn"))(n), 
main = "BuGn")

plot(iris$Petal.Length, iris$Petal.With, 
     pch=20, 
     col = brewer.pal(3, "Set2")[iris$Species],
     main = "iris")
```


> Written with [StackEdit](https://stackedit.io/).